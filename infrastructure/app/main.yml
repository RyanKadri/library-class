AWSTemplateFormatVersion: 2010-09-09
Description: >
  This template creates the necessary resources for the rk0.xyz app
Parameters:
  HostedZoneName:
    Type: String
  Certificate:
    Type: String
  SitePrefix:
    Type: String
  EnvironmentName:
    Type: String
  Repository:
    Type: String
Conditions:
  HasSitePrefix: !Not [!Equals [!Ref "SitePrefix", ""]]
Mappings:
  ServiceVersions:
    Games: 
      Value: "1.0.0"
Resources: 
  NetworkResources:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./networking.yml
  LoadBalancerV2:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./load-balancer.yml
      Parameters:
        VPC: !GetAtt NetworkResources.Outputs.VPC
        Subnets: !GetAtt NetworkResources.Outputs.PublicSubnets
        SecurityGroup: !GetAtt SecurityGroups.Outputs.LoadBalancerSecurityGroup
        EnvironmentName: !Ref EnvironmentName
        Certificate: !Ref Certificate
  SecurityGroups:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./security-groups.yml
      Parameters:
        VPC: !GetAtt NetworkResources.Outputs.VPC
  StaticWeb:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./static-web.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
        Certificate: !Ref Certificate
        Url: !If
          - HasSitePrefix
          - !Join ["", [!Ref SitePrefix, ".", !Ref "HostedZoneName"]]
          - !Ref HostedZoneName
  GamesServiceV2: 
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./services/games-service.yml
      Parameters:
        Cluster: !GetAtt Cluster.Outputs.Cluster
        VPC: !GetAtt NetworkResources.Outputs.VPC
        Subnets: !GetAtt NetworkResources.Outputs.PublicSubnets
        LogGroup: !GetAtt Logging.Outputs.LogGroup
        Listener: !GetAtt LoadBalancerV2.Outputs.Listener
        SecurityGroup: !GetAtt SecurityGroups.Outputs.ContainerSecurityGroup
        ImageVersion: !FindInMap [ServiceVersions, "Games", "Value"]
        Repository: !Ref Repository
  Logging:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./logging.yml
  Cluster: 
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./ecs-cluster.yml
      Parameters:
        EnvironmentName: !Ref EnvironmentName
  DNS:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: ./dns.yml
      Parameters:
        HostedZone: !Join ["", [!Ref HostedZoneName, "."]]
        CloudFrontDomain: !GetAtt StaticWeb.Outputs.CloudFrontDomain
        LoadBalancerDomain: !GetAtt LoadBalancerV2.Outputs.DNSName
        SiteDomain: !If
          - HasSitePrefix
          - !Join ["", [!Ref SitePrefix, ".", !Ref "HostedZoneName", "."]]
          - !Join ["", [!Ref "HostedZoneName", '.']]
        ApiDomain: !If
          - HasSitePrefix
          - !Join ["", [!Ref SitePrefix, "-api.", !Ref "HostedZoneName", "."]]
          - !Join ["", ["api.", !Ref "HostedZoneName", "."]]
Outputs:
  SiteUrl:
    Description: "The URL of the Cloudfront Distribution"
    Value: !Join ["", ["https://", !GetAtt 'DNS.Outputs.SiteUrl'] ]
  BackendUrl:
    Description: "The URL of the backend microservices"
    Value: !Join ["", ["https://", !GetAtt DNS.Outputs.ApiUrl ] ]
  FrontendBucket: 
    Value: !GetAtt StaticWeb.Outputs.FrontendBucket
  Cluster:
    Value: !GetAtt Cluster.Outputs.Cluster
  GameService:
    Value: !GetAtt GamesServiceV2.Outputs.GameService
