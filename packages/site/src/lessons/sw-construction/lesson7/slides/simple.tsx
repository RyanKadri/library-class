import React from "react";
import { generateContentSlide, generateMediaSlide, generateMessageSlide, generateTitleSlide } from "../../../../../../presenter-core/src/slides/generate-slide";
import gollum from "./gollum.jpg";

export const Title = generateTitleSlide(
    "Software Design Patterns: Functional and Immutable Programming",
    "Ryan Kadri"
);

export const Agenda = generateContentSlide("Agenda", [
    "Quiz",
    "Midterm and Assignments Review",
    'Defining "Production" Code',
    "Bundling/Transpiling Javascript",
    "JavaScript Dependencies",
    "Remote Debugging",
    "Practice Time"
]);

export const WhatIsProductionCode = generateMessageSlide('What is "Production" Code?');

export const EnvironmentBreakdown = generateContentSlide("Application Environments", [
    "To reduce bugs and downtime, companies release code in multiple environments",
    "Environments have different purposes, hardware, and integrations",
    { text: "Common Environments Include: ", children: [
        "Dev: A shared environment for developers to integrate their code. Least stable, most up to date",
        "QA: An environment for code stakeholders (or testers) to make sure code is working. More stable but bugs aren't usually a big deal",
        "Prod: What the clients see. Should be the most stable",
        "Performance: Usually close to prod environment. Should be stable"
    ]}
]);

export const EnvironmentsConsiderations = generateContentSlide("Application Environments", [
    'Different environments may run differently',
    "Production environments want to be fast, efficient, secure, and stable",
    "Dev environments should be easy to debug",
    "QA Environments should be debuggable but can't get too far from Prod",
    "Code should have good logging but can't have too much. Dev can afford more than prod"
]);

export const ProductionCode = generateContentSlide("Production Code", [
    "Code that is compiled for Production may look different than code in QA",
    "Web pages are some of the easiest examples",
    "Startup time is very important. The network is usually the bottleneck",
]);

export const HowToSpeedupNetworkQuestion = generateMessageSlide("How do you improve page load times?");

export const HowToSpeedupNetwork = generateContentSlide("Improving Page Load Times", [
    "Transparent Compression (Gzip)",
    "Use a CDN",
    "Make parallel requests where possible (HTTP/2 and HTML attributes)",
    "Enable caching"
]);

export const SpeedupNetworkTricksQuestion = generateMessageSlide("Can we get trickier?");

export const SpeedupNetworkTricks = generateContentSlide("Page Load Tricks", [
    "Sending one request is cheaper than sending multiple",
    "We don't need all those fancy variable names. White space is for amateurs",
    "These libraries sure have a lot of features...",
    "Got some CSS? Toss that into the JS file too",
    "Users don't need the whole page at once right?",
    "So does this mean our code has to look ugly?"
]);

export const GollumSlide = generateMediaSlide(<img src={gollum} />);

export const HowDoProductionize = generateContentSlide("Building Front End Code", [
    <span>Concatenation is easy -- <code>cat *.js</code></span>,
    "Minification is hard",
    "Removing unused code is harder",
    "Splitting Above the Fold content is super hard!",
    "Luckily, there are libraries for that!"
]);

export const RememberNpm = generateMessageSlide("Remember NPM?");

export const NpmReminder = generateContentSlide("NPM", [
    "NPM declares dependencies in a package.json",
    "Stores libraries and dependencies in node_modules",
    <span><code>npm install</code> your dependencies</span>
]);

export const Parcel = generateContentSlide("Parcel", [
    "Parcel can productionize your code",
    "It also lets you use JS imports!",
    "Makes it easier to add libraries to your project and generate optimized builds"
]);

export const HowDoRead = generateMessageSlide("Optimized builds are ugly. How do you debug your new ugly code?");

export const SourceMaps = generateContentSlide("Source Maps", [
    "Can be generated by most tooling",
    "Lets you get back to the original code without slowing down the page",
    "Without sourcemaps, you may have to get creative",
    "Rely on strings, exceptions, breakpoints, and logpoints"
]);

export const HowToTestBackend = generateMessageSlide("How do I debug a remote program?")

export const TestingBackend = generateContentSlide("Remote Debugging", [
    "Try to reproduce and debug on your local machine. It's easier",
    "Use logging to figure out where bugs might be happening",
    "Be strategic about how much you log and where the logs go",
    "Tools like Log4J allow you to log to multiple places and hide some of that logic",
]);

export const RemoteDebugging = generateContentSlide("Remote Debugging", [
    "Sometimes it is possible to start a remote debugging session",
    "Java, NodeJS and Chrome itself can all run an internal server for debugging",
    "Passes information about symbols and variables over the network",
    "Allows for all/most of the normal debugging actions"
]);

export const ChromeMindBlow = generateMessageSlide("Ready to have your mind blown?!")